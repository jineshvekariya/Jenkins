pipeline{
    agent{
        label 'devops'
    }

    options{
        buildDiscarder(logRotator(numToKeepStr: '3'))
    }

    parameters{
        string(name: 'ImageName', defaultValue: 'jenkinsapp')
        string(name: 'ImageTag', defaultValue: 'latest')
        string(name: 'ContainerPort', defaultValue: '8088')
        string(name: 'ContainerName', defaultValue: 'jenkinsappcontainer')
    }

    environment{
        DOCKER_REGISTRY_CREDS = credentials('docker-registry-login')
    }

    stages{
        stage('App Code Checkout') {
            steps{
                git url: 'https://github.com/jineshvekariya/jenkins.git', branch: 'main'    
            }  
        }

        stage('Build Image') {
            steps{
                sh 'ls -la'
                sh "docker build -t ${parames:ImageName}:${parames:ImageTag} ."
            }
        }

        stage('Push to Registry'){
            steps{
                sh "docker login -u $DOCKER_REGISTRY_CREDS_USR -p $DOCKER_REGISTRY_CREDS_PSW"
                sh "docker tag ${parames:ImageName}:${parames:ImageTag} $DOCKER_REGISTRY_CREDS_USR/${parames:ImageName}:${parames:ImageTag}"
                sh "docker push $DOCKER_REGISTRY_CREDS_USR/${parames:ImageName}:${parames:ImageTag}"
                sh "docker rmi -f ${parames:ImageName}:${parames:ImageTag}"
           //   sh "docker rmi -f $DOCKER_REGISTRY_CREDS_USR/${parames:ImageName}:${parames:ImageTag}"
            }
        }

        stage('Container Create'){
            steps{
            //  sh "docker rm -f ${parames:ContainerName}"
                sh "docker run -dit --name ${parames:ContainerName} -p ${parames:ContainerPort}:80 $DOCKER_REGISTRY_CREDS_USR/${parames:ImageName}:${parames:ImageTag}"
            }
        }
    }
}
